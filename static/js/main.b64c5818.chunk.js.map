{"version":3,"sources":["Messages.js","Input.js","Chat.js","Tab.js","Tabs.js","App.js","serviceWorker.js","index.js"],"names":["Messages","message","text","className","messages","this","props","map","m","renderMessage","Component","Input","state","e","setState","target","value","preventDefault","onSendMessage","onSubmit","onChange","type","placeholder","autoFocus","App","push","Tab","onClick","label","activeTab","Tabs","onClickTabItem","tab","children","child","key","require","container","document","createElement","body","appendChild","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b64c5818.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react'\r\nimport './MessageForm.css'\r\n\r\nclass Messages extends Component {\r\n  \r\n  renderMessage(message) {\r\n\r\n    const {text} = message;\r\n    \r\n     return (\r\n      <li>\r\n        <div className=\"Message-content\">\r\n          <div className=\"text\">{text}</div>\r\n        </div>\r\n        \r\n      </li>\r\n     );\r\n    }\r\n    \r\n  render() {\r\n    const {messages} = this.props;\r\n    \r\n      return (\r\n        <ul className=\"Messages-list\">\r\n          {messages.map(m => this.renderMessage(m))}\r\n        </ul>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Messages;","import {Component} from \"react\";\r\nimport React from \"react\";\r\n\r\nclass Input extends Component {\r\n  state = {\r\n    text: \"\",\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({text: e.target.value});\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    this.setState({text: \"\"});\r\n    this.props.onSendMessage(this.state.text);    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Input\">\r\n        <form onSubmit={e => this.onSubmit(e)}>\r\n          <input\r\n            onChange={e => this.onChange(e)}\r\n            value={this.state.text}\r\n            type=\"text\"\r\n            placeholder=\"Enter your message and press ENTER\"\r\n            autoFocus=\"true\"\r\n          />\r\n          <button>Send</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;","import React, { Component } from 'react'\r\n//import logo from './logo.svg';\r\n// import MessageForm from './MessageForm';\r\nimport Messages from './Messages';\r\nimport Input from './Input';\r\n\r\nimport './Chat.css';\r\n\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    messages: [\r\n      {\r\n        text: \"Welcome to Barvida Chat\",\r\n       \r\n      }\r\n    ]\r\n  }\r\n\r\n  onSendMessage = (message) => {\r\n    const messages = this.state.messages\r\n    messages.push({\r\n      text: message,\r\n    })\r\n    this.setState({messages: messages})\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Messages\r\n          messages={this.state.messages}\r\n        />\r\n        <Input\r\n          onSendMessage={this.onSendMessage}\r\n\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Tab extends Component {\r\n  static propTypes = {\r\n    activeTab: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n\r\n  onClick = () => {\r\n    const { label, onClick } = this.props;\r\n    onClick(label);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onClick,\r\n      props: {\r\n        activeTab,\r\n        label,\r\n      },\r\n    } = this;\r\n\r\n    let className = 'tab-list-item';\r\n\r\n    if (activeTab === label) {\r\n      className += ' tab-list-active';\r\n    }\r\n\r\n    return (\r\n      <li\r\n        className={className}\r\n        onClick={onClick}\r\n      >\r\n        {label}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tab;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Tab from './Tab';\r\n\r\nclass Tabs extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.instanceOf(Array).isRequired,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeTab: this.props.children[0].props.label,\r\n    };\r\n  }\r\n\r\n  onClickTabItem = (tab) => {\r\n    this.setState({ activeTab: tab });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onClickTabItem,\r\n      props: {\r\n        children,\r\n      },\r\n      state: {\r\n        activeTab,\r\n      }\r\n    } = this;\r\n\r\n    return (\r\n      <div className=\"tabs\">\r\n        <ol className=\"tab-list\">\r\n          {children.map((child) => {\r\n            const { label } = child.props;\r\n\r\n            return (\r\n              <Tab\r\n                activeTab={activeTab}\r\n                key={label}\r\n                label={label}\r\n                onClick={onClickTabItem}\r\n              />\r\n            );\r\n          })}\r\n        </ol>\r\n        <div className=\"tab-content\">\r\n          {children.map((child) => {\r\n            if (child.props.label !== activeTab) return undefined;\r\n            return child.props.children;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs;","import React from 'react';\nimport Chat from './Chat';\nimport Tabs from './Tabs';\nrequire('./style.css');\n\n\n\nfunction App() {\n  return (\n    <div>\n      <h1>Barvida Demo</h1>\n     <Tabs>\n      <div  label=\"Start Seite\">\n       <div className=\"Tabstyle\" > <div className=\"knockout\">BΛRVIDΛ </div> </div>\n      </div>\n      <div  label=\"Chat\">\n        <Chat/>\n      </div>\n      <div label=\"Info\">\n      <div className=\"Tabstyle\"><h1>Barvida GmbH</h1>\n\n                  <h4>Gerhart-Hauptmannstr. 6<br />\n                  33613 Bielefeld<br />\n                  info@barvida.de</h4> </div>\n      </div>\n    </Tabs>\n    </div>\n  );\n}\n\nconst container = document.createElement('div');\ndocument.body.appendChild(container);\n//render(<App />, container);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}